class Solution {
public:
    int solve(vector<int> &nums,int tag,int target){
        int n = nums.size();
        int low = 0;
        int high = n-1;
        int mid ;
        int ans = -1;
        
        while(low<=high){
            mid = low + (high-low)/2;
            if(nums[mid]>target){
                high = mid-1;
            }else if(nums[mid]<target){
                low = mid+1;
            }else{
                ans = mid;
                if(tag==-1) high = mid+tag;
                else low = mid+tag;   
            }
            
        }
        return ans;
        
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        int n = nums.size();
        int idx1 = solve(nums,-1,target);
        int idx2 = solve(nums,1,target);
        vector<int> ans;
        ans.push_back(idx1);
        ans.push_back(idx2);
        return ans;
        
    }
};
